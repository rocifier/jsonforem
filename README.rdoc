= miniature-octo-dribble

This project uses a json REST api and comes under the MIT-LICENSE. Use it however you will. No responsibility taken for any kind of damage.

== Installing:

    gem 'miniature-octo-dribble', :github => 'rocifier/miniature-octo-tribble.git'

    bundle

Assuming you use a class called User for your users (and you should), you don't need to configure the string Jsonforem::user_class in an initializer, so just install the database stuff, which is really important. The below generator also adds miniature-octo-dribble to your config/routes.rb under /forum which you can change if you like.

    rails g jsonforem:install

    rake db:migrate

Now add this line into your config/environment.rb file:

    require "jsonforem/engine"

Finally, you need to create a method on your User class called forum_admin? which returns a boolean whether that particular user has administrator priveleges or not for the forum.

And you should be ready to go.

== Progress and features

The below page lists all features that are in progress. Red = high priority and blue = low priority.

https://trello.com/b/lgnyugM2/miniature-octo-dribble

== Usage

Note that a comment is just a post, but with its parent id set to another parent post.

              GET    /posts                 List ALL posts unfiltered.
              GET    /posts/search          Search all posts for content that contains searchstring case insensitive. JSON parameter example: {"searchstring": "test"}
              POST   /posts                 Create a post.
              GET    /posts/:id             Get a post. No authorization.
              PUT    /posts/:id             Submit edit to post. Must be authorized.
              DELETE /posts/:id             Delete a post. Must be authorized.
              GET    /posts/:id/children    Get all the comments/replies below a post.

              GET    /categories            Get all categories.
              POST   /categories            Create a category (as admin).
              GET    /categories/:id        Get a specific category.
              PUT    /categories/:id        Submit edit to category (as admin)
              DELETE /categories/:id        Delete a category (as admin)
              GET    /categories/:id/forums Get all forums in a category.

              GET    /forums                Gets all forums, ever. Not recommended.
              POST   /forums                Create a new forum inside a category (as admin).
              GET    /forums/:id            Get a specific forum.
              PUT    /forums/:id            Submit edit to forum (as admin)
              DELETE /forums/:id            Delete a forum (as admin).
              GET    /forums/:id/topics     Get all topics in a forum.

              GET    /topics                Get all topics, ever. Not recommended.
              POST   /topics                Creates a topic inside a forum (as admin)
              GET    /topics/:id            Get a specific topic.
              PUT    /topics/:id            Submit edit to topic (as admin)
              DELETE /topics/:id            Delete a topic (as admin)
              GET    /topics/:id/posts      Get all top-level posts in a topic (does not include comment posts).

